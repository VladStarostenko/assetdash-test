{"version":3,"sources":["webpack:///./src/templates/templates.style.tsx","webpack:///./src/templates/dato-category.tsx"],"names":["PostPaginationWrapper","styled","div","themeGet","PostName","Text","span","ThumbImg","PrevButton","NextButton","GridIcon","RelatedPostWrapper","RelatedPostTitle","h2","RelatedPostItems","RelatedPostItem","TagPostsWrapper","TagPageHeading","TagName","h1","BlogPostFooter","BlogPostComment","PostShare","BlogPostDetailsWrapper","PostRow","CategoryPostCol","Category","pageContext","data","category","allDatoCmsBlogPost","edges","totalCount","title","description","className","map","node","index","key","slug","excerpt","contentNode","childMarkdownRemark","image","coverImage","fluid","url","pageQuery"],"mappings":"4FAAA,osBAmBaA,GAhBmBC,IAAOC,IAAV,sFAAGD,CAAH,iSAgBQA,IAAOC,IAAV,2FAAGD,CAAH,4MAORE,YAAS,oBAAqB,WAC3BA,YAAS,oBAAqB,aAE9CC,EAAWH,IAAOC,IAAV,8EAAGD,CAAH,qIASRI,EAAOJ,IAAOK,KAAV,0EAAGL,CAAH,+LAYJM,EAAWN,IAAOC,IAAV,8EAAGD,CAAH,kRAkBRO,EAAaP,IAAOC,IAAV,gFAAGD,CAAH,0wBAeFE,YAAS,eAAgB,0BAC/BA,YAAS,mBAAoB,WAWlCC,EAIAC,EAOFD,EAIAC,GAOKI,EAAaR,IAAOC,IAAV,gFAAGD,CAAH,6/BAeFE,YAAS,eAAgB,0BAC/BA,YAAS,mBAAoB,WAStCE,EAIAE,EAMAH,EAUIA,EAIAC,EAOFD,EAIAC,GAOKK,EAAWT,IAAOC,IAAV,8EAAGD,CAAH,uLAcRU,EAAqBV,IAAOC,IAAV,wFAAGD,CAAH,qQAgBlBW,EAAmBX,IAAOY,GAAV,sFAAGZ,CAAH,qIAClBE,YAAS,mBAAoB,YAQ3BW,EAAmBb,IAAOC,IAAV,uFAAGD,CAAH,kEAMhBc,EAAkBd,IAAOC,IAAV,sFAAGD,CAAH,oWAqBfe,EAAkBf,IAAOC,IAAV,sFAAGD,CAAH,0mBAiCfgB,EAAiBhB,IAAOC,IAAV,qFAAGD,CAAH,qfA4BdiB,EAAUjB,IAAOkB,GAAV,8EAAGlB,CAAH,0MAGTE,YAAS,iBAAkB,YASzBiB,EAAiBnB,IAAOC,IAAV,qFAAGD,CAAH,8PAgBdoB,EAAkBpB,IAAOC,IAAV,sFAAGD,CAAH,wLAafqB,EAAYrB,IAAOC,IAAV,gFAAGD,CAAH,iWAYTE,YAAS,mBAAoB,WAG3BA,YAAS,iBAAkB,YAQ7BoB,EAAyBtB,IAAOC,IAAV,6FAAGD,CAAH,qJA+BtBuB,GArBWvB,IAAOC,IAAV,+EAAGD,CAAH,kVAaRE,YAAS,UAAW,YAQVF,IAAOC,IAAV,8EAAGD,CAAH,uFAwBPwB,GAjBUxB,IAAOC,IAAV,8EAAGD,CAAH,wRAiBWA,IAAOC,IAAV,sFAAGD,CAAH,oR,kCC9a5B,+IAkDeyB,UAnCE,SAAC,GAA+B,IAA7BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,KACvBC,EAAaF,EAAbE,SADuC,EAEjBD,EAAKE,mBAA3BC,EAFuC,EAEvCA,MAAOC,EAFgC,EAEhCA,WAEf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOJ,EACPK,YAAW,mBAAqBF,EAArB,UAGb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAUH,GADZ,mBAEsBG,EAFtB,SAIA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASG,UAAU,YAChBJ,EAAMK,KAAI,gBAAGC,EAAH,EAAGA,KAAH,EAASC,MAAT,OACT,kBAAC,IAAD,CAAiBC,IAAKF,EAAKG,MACzB,kBAAC,IAAD,CACEP,MAAOI,EAAKJ,MACZQ,QAASJ,EAAKK,YAAYC,oBAAoBF,QAC9CG,MAAOP,EAAKQ,WAAWC,MACvBC,IAAKV,EAAKG,gBAarB,IAAMQ,EAAY","file":"component---src-templates-dato-category-tsx-19548f5370c7f1e49c47.js","sourcesContent":["import styled from 'styled-components';\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const BlogPostsWrapper = styled.div`\r\n  margin: 0 auto;\r\n  padding: 120px 75px 0 75px;\r\n  position: relative;\r\n\r\n  @media (max-width: 1400px) {\r\n    padding: 120px 35px 0 35px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 80px 25px 0 25px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n`;\r\n\r\nexport const PostPaginationWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 60px 0;\r\n  margin-top: 60px;\r\n  border-top: 1px solid ${themeGet('colors.inactiveBG', '#e6e6e6')};\r\n  border-bottom: 1px solid ${themeGet('colors.inactiveBG', '#e6e6e6')};\r\n`;\r\nexport const PostName = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  opacity: 0;\r\n  transition: all 0.35s ease;\r\n`;\r\n\r\nexport const Text = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  opacity: 1;\r\n  position: absolute;\r\n  top: 50%;\r\n  margin-top: -10px;\r\n  transition: all 0.35s ease;\r\n`;\r\n\r\nexport const ThumbImg = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  border-radius: 50%;\r\n  flex-shrink: 0;\r\n  margin-right: 20px;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const PrevButton = styled.div`\r\n  width: 40%;\r\n  display: flex;\r\n  align-items: center;\r\n  overflow: hidden;\r\n\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    min-height: 20px;\r\n    overflow: hidden;\r\n    cursor: pointer;\r\n    position: relative;\r\n    span {\r\n      font-family: ${themeGet('fontFamily.1', \"'PT Serif', sans-serif\")};\r\n      color: ${themeGet('colors.textColor', '#292929')};\r\n      font-size: 18px;\r\n      font-weight: 400;\r\n      max-width: 100%;\r\n      white-space: nowrap;\r\n      text-overflow: ellipsis;\r\n      overflow: hidden;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      &:hover {\r\n        ${PostName} {\r\n          opacity: 1;\r\n        }\r\n\r\n        ${Text} {\r\n          opacity: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    @media (max-width: 767px) {\r\n      ${PostName} {\r\n        display: none;\r\n      }\r\n\r\n      ${Text} {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NextButton = styled.div`\r\n  width: 40%;\r\n  display: flex;\r\n  align-items: center;\r\n  overflow: hidden;\r\n\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    min-height: 20px;\r\n    overflow: hidden;\r\n    justify-content: flex-end;\r\n    position: relative;\r\n    span {\r\n      font-family: ${themeGet('fontFamily.1', \"'PT Serif', sans-serif\")};\r\n      color: ${themeGet('colors.textColor', '#292929')};\r\n      font-size: 18px;\r\n      font-weight: 400;\r\n      max-width: 100%;\r\n      white-space: nowrap;\r\n      text-overflow: ellipsis;\r\n      overflow: hidden;\r\n    }\r\n\r\n    ${Text} {\r\n      justify-content: flex-end;\r\n    }\r\n\r\n    ${ThumbImg} {\r\n      order: 1;\r\n      margin-left: 20px;\r\n      margin-right: 0;\r\n    }\r\n\r\n    ${PostName} {\r\n      justify-content: flex-end;\r\n    }\r\n\r\n    span {\r\n      order: 0;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      &:hover {\r\n        ${PostName} {\r\n          opacity: 1;\r\n        }\r\n\r\n        ${Text} {\r\n          opacity: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    @media (max-width: 767px) {\r\n      ${PostName} {\r\n        display: none;\r\n      }\r\n\r\n      ${Text} {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GridIcon = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-shrink: 0;\r\n  margin: 0 30px;\r\n\r\n  img {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const RelatedPostWrapper = styled.div`\r\n  margin: 0 auto;\r\n  @media (max-width: 575px) {\r\n    padding: 0 15px;\r\n  }\r\n  .pagination {\r\n    margin-top: 80px;\r\n    @media (max-width: 1024px) {\r\n      margin-top: 60px;\r\n    }\r\n    @media (max-width: 575px) {\r\n      margin-top: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const RelatedPostTitle = styled.h2`\r\n  color: ${themeGet('colors.textColor', '#292929')};\r\n  font-size: 35px;\r\n  font-weight: 400;\r\n  position: relative;\r\n  margin-bottom: 60px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const RelatedPostItems = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0 -15px;\r\n`;\r\n\r\nexport const RelatedPostItem = styled.div`\r\n  flex: 0 0 33.333333333%;\r\n  max-width: 33.333333333%;\r\n  padding: 0 15px;\r\n  @media (max-width: 767px) {\r\n    flex: 0 0 100%;\r\n    max-width: 100%;\r\n    &:nth-child(n + 2) {\r\n      margin-top: 50px;\r\n    }\r\n  }\r\n  .post_card {\r\n    &:hover {\r\n      .post_preview {\r\n        a {\r\n          transform: scale(1.05);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const TagPostsWrapper = styled.div`\r\n  margin: 0 auto;\r\n  padding-top: 60px;\r\n  position: relative;\r\n  @media (min-width: 990px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    width: 1050px;\r\n  }\r\n  @media (min-width: 1400px) {\r\n    width: 1170px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 30px 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n\r\n  .post_card {\r\n    margin-bottom: 120px;\r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n    @media (max-width: 990px) {\r\n      margin-bottom: 80px;\r\n    }\r\n    @media (max-width: 575px) {\r\n      margin-bottom: 60px;\r\n    }\r\n  }\r\n`;\r\nexport const TagPageHeading = styled.div`\r\n  /* padding-left: 210px; */\r\n  font-size: 15px;\r\n  font-weight: 400;\r\n  margin-bottom: 60px;\r\n  position: relative;\r\n  @media (max-width: 1200px) {\r\n    padding-left: 160px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding-left: 0;\r\n    font-size: 13px;\r\n    margin-bottom: 80px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    margin-bottom: 60px;\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    display: block;\r\n    width: 90px;\r\n    height: 1px;\r\n    background: #292929;\r\n    margin-top: 15px;\r\n  }\r\n`;\r\n\r\nexport const TagName = styled.h1`\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  color: ${themeGet('colors.primary', '#D10068')};\r\n  margin-bottom: 8px;\r\n  @media (max-width: 990px) {\r\n    font-size: 26px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    font-size: 22px;\r\n  }\r\n`;\r\nexport const BlogPostFooter = styled.div`\r\n  width: 100%;\r\n  max-width: 100%;\r\n  padding-top: 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  @media (max-width: 990px) {\r\n    padding-top: 40px;\r\n    width: 100%;\r\n  }\r\n  &.center {\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nexport const BlogPostComment = styled.div`\r\n  width: 100%;\r\n  max-width: 100%;\r\n  padding-top: 80px;\r\n  @media (max-width: 990px) {\r\n    padding-top: 60px;\r\n    width: 100%;\r\n  }\r\n  &.center {\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nexport const PostShare = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  > span {\r\n    flex-shrink: 0;\r\n  }\r\n  > div,\r\n  .react-share__ShareButton {\r\n    cursor: pointer;\r\n    margin-left: 25px;\r\n    font-size: 22px;\r\n    outline: 0;\r\n    color: ${themeGet('colors.textColor', '#292929')};\r\n    transition: 0.15s ease-in-out;\r\n    &:hover {\r\n      color: ${themeGet('colors.primary', '#D10068')};\r\n    }\r\n    svg {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BlogPostDetailsWrapper = styled.div`\r\n  margin: 0 auto;\r\n  width: 1170px;\r\n  max-width: 100%;\r\n  padding-bottom: 120px;\r\n  @media (max-width: 810px) {\r\n    padding: 0 15px;\r\n  }\r\n`;\r\n\r\nexport const PostTags = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  @media (max-width: 575px) {\r\n    display: none;\r\n  }\r\n\r\n  a {\r\n    display: block;\r\n    margin-right: 30px;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: ${themeGet('primary', '#D10068')};\r\n    @media (max-width: 990px) {\r\n      font-size: 13px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PostRow = styled.div`\r\n  margin: 0 -15px;\r\n  @media (max-width: 990px) {\r\n    margin: 0 -10px;\r\n  }\r\n`;\r\n\r\nexport const PostCol = styled.div`\r\n  margin-bottom: 50px;\r\n  width: 33.33333%;\r\n  float: left;\r\n  padding: 0 15px;\r\n  @media (max-width: 990px) {\r\n    padding: 0 10px;\r\n  }\r\n  @media (max-width: 767px) {\r\n    width: 50%;\r\n  }\r\n  @media (max-width: 575px) {\r\n    width: 100%;\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\n\r\nexport const CategoryPostCol = styled.div`\r\n  margin-bottom: 30px;\r\n  width: 50%;\r\n  float: left;\r\n  padding: 0 15px;\r\n  @media (max-width: 990px) {\r\n    padding: 0 10px;\r\n    margin-bottom: 30px;\r\n  }\r\n  @media (max-width: 767px) {\r\n    width: 50%;\r\n  }\r\n  @media (max-width: 575px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../containers/layout\";\n// import PostCard from '../components/post-card/post-card';\nimport Masonry from \"react-masonry-component\";\nimport MasonryCard from \"../components/masonry-card/masonry-card\";\nimport SEO from \"../components/seo\";\nimport {\n  TagPostsWrapper,\n  TagPageHeading,\n  TagName,\n  PostRow,\n  CategoryPostCol,\n} from \"./templates.style\";\n\nconst Category = ({ pageContext, data }: any) => {\n  const { category } = pageContext;\n  const { edges, totalCount } = data.allDatoCmsBlogPost;\n\n  return (\n    <Layout>\n      <SEO\n        title={category}\n        description={`A collection of ${totalCount} post`}\n      />\n\n      <TagPostsWrapper>\n        <TagPageHeading>\n          <TagName>{category}</TagName>\n          {`A collection of ${totalCount} post`}\n        </TagPageHeading>\n        <PostRow>\n          <Masonry className=\"showcase\">\n            {edges.map(({ node, index }: any) => (\n              <CategoryPostCol key={node.slug}>\n                <MasonryCard\n                  title={node.title}\n                  excerpt={node.contentNode.childMarkdownRemark.excerpt}\n                  image={node.coverImage.fluid}\n                  url={node.slug}\n                />\n              </CategoryPostCol>\n            ))}\n          </Masonry>\n        </PostRow>\n      </TagPostsWrapper>\n    </Layout>\n  );\n};\n\nexport default Category;\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    allDatoCmsBlogPost(\n      filter: { categories: { elemMatch: { id: { eq: $id } } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          title\n          slug\n          description\n          tags {\n            title\n          }\n          categories {\n            title\n          }\n          coverImage {\n            fluid(maxWidth: 480, maxHeight: 285) {\n              ...GatsbyDatoCmsFluid\n            }\n          }\n          contentNode {\n            childMarkdownRemark {\n              html\n              excerpt\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}